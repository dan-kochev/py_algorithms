# Python 3.9.5
# OS Win10 x64

import sys
from random import randint

'''Задание 1.1 Найти сумму и произведение цифр трехзначного числа, 
которое вводит пользователь'''

number = int(input("Введите трёхзначное число: "))

sum_numbers = (number // 100 + (number // 10) % 10 + number % 10)
prod_numbers = ((number // 100) * ((number // 10) % 10) * (number % 10))

print(f"Сумма чисел равна:{sum_numbers} \nПроизведение равно:{prod_numbers}")

sum_var = sys.getsizeof(number) + sys.getsizeof(sum_numbers) + \
          sys.getsizeof(prod_numbers)

print(f'Выделено памяти под переменные всего: {sum_var}')
# Если введенное трехзначное число содержит ноль, то на переменные выделяется
# 80 байт памяти (24 байта для переменной умножения). Если трехзначное число не
# содержит ноль - на переменные выделяется 84 байта (по 28 байт на каждую).

'''Задание 2.2 Посчитать четные и нечетные цифры введенного 
натурального числа.'''

num = input('Введите натуральное число: ')
even = 0
odd = 0

for i in num:
    if int(i) % 2 != 0:
        odd += 1
    else:
        even += 1

print(f'Четных чисел: {even}, нечетных: {odd}')

sum_var = sys.getsizeof(num) + sys.getsizeof(even) + \
          sys.getsizeof(odd)

print(f'Выделено памяти под переменные всего: {sum_var}')
# Количество выделяемой памяти будет зависеть от вводимого числа.

'''Задание 3. Определить, какое число в массиве встречается чаще всего.'''

a = [randint(0, 300) for i in range(100)]

num_1 = 0
max_i = 0
for i in a:
    if a.count(i) > max_i:
        max_i = a.count(i)
        num_1 = i

print(f'Чаще всего встречается {num_1}, а именно {max_i} раза')

sum_var = sys.getsizeof(a) + sys.getsizeof(num_1) + \
          sys.getsizeof(max_i)

print(f'Выделено памяти под переменные всего: {sum_var}')
# Как правило, под переменные выделяется 976 байт,
# поскольку размер массива фиксирован.

# Итого: наиболее эффективное использование памяти реалзовано в первой и
# третьей задачах, поскольку размеры переменных в них заранее определены
# (в первой задаче по условию необходимо ввести трехзначное число,
# в третьей - массив имеет фиксированный размер), несмотря на то, что третья
# программа требует больше всего памяти (из-за размера массива). Наименее
# эффективное использование памяти реализовано во второй задаче, т.к. оно
# напрямую зависит от количества цифр вводимого пользователем числа.
